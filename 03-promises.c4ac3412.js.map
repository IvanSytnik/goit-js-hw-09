{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAiBC,GAEb,OAAOA,GAAOA,EAAIC,cAAgBC,OAAS,gBAAkBF,C,mBCL3DG,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAqBN,SAASS,EAASC,GACjBC,EAAAC,GAASC,OAAOC,QAAQJ,E,CAEzB,SAASK,EAAUL,GAClBC,EAAAC,GAASC,OAAOG,QAAQN,E,CAnBzBf,EAAKsB,iBAAiB,UAAU,SAAAC,GAC/BA,EAAEC,iBACF,IAAInB,EAAQoB,SAASzB,EAAKK,MAAMV,OAC5B+B,EAAOD,SAASzB,EAAK0B,KAAK/B,OAC1BgC,EAASF,SAASzB,EAAK2B,OAAOhC,OAClCiC,QAAQC,SAAiB,IAANF,EAAM,YAAbX,EAAAtB,EAAA,CAAOiC,IACnB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/B,IAAIC,EAAO1B,EAAQqB,EAAKI,EACpBE,EAAYF,EAAI,EACpBF,QAAQC,IAAIE,EAAMC,GAClB7B,EAAc6B,EAAWD,GAAME,KAAKnB,GAAUoB,MAAMd,E","sources":["node_modules/@swc/helpers/lib/_type_of.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } \n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay)\n    \n  })\n  \n}\n\n form.addEventListener(\"submit\", e => {\n  e.preventDefault();\n  let delay = parseInt(form.delay.value) ;\n  let step = parseInt(form.step.value);\n  let amount = parseInt(form.amount.value);\n  console.log(typeof(amount));\n  for (let i = 0; i < amount; i++) {\n    let time = delay + step*i;\n    let positions = i + 1;\n    console.log(time, positions)\n    createPromise(positions, time).then(promgood).catch(promerror);\n    \n  }\n })\n\n function promgood(result) {\n  Notiflix.Notify.success(result);\n }\n function promerror(result) {\n  Notiflix.Notify.failure(result);\n }\n "],"names":["Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","$ce04d3a99e08e73b$var$promgood","result","$parcel$interopDefault","$iU1Pc","Notify","success","$ce04d3a99e08e73b$var$promerror","failure","addEventListener","e","preventDefault","parseInt","step","amount","console","log","i","time","positions","then","catch"],"version":3,"file":"03-promises.c4ac3412.js.map"}